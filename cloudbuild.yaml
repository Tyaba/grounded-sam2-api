steps:
  - id: "download-sam2"
    name: "ubuntu"
    waitFor: ["-"]
    script: |
      #!/usr/bin/env bash
      set -eu
      apt-get update && apt-get install -y wget
      cd checkpoints
      bash download_ckpts.sh

  - id: "download-gdino"
    name: "ubuntu"
    waitFor: ["-"]
    script: |
      #!/usr/bin/env bash
      set -eu
      apt-get update && apt-get install -y wget
      cd gdino_checkpoints
      bash download_ckpts.sh

  - id: "docker-pull"
    name: "gcr.io/cloud-builders/docker"
    waitFor: ["-"]
    env:
      - "IMAGE_URI=$_REGION-docker.pkg.dev/$PROJECT_ID/containers/$_SERVICE_NAME"
    script: |
      #!/usr/bin/env bash
      set -eu
      docker pull $IMAGE_URI:latest || exit 0

  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    waitFor: ["download-sam2", "download-gdino", "docker-pull"]
    env:
      - "IMAGE_URI=$_REGION-docker.pkg.dev/$PROJECT_ID/containers/$_SERVICE_NAME"
      - "SHORT_SHA=$SHORT_SHA"
    script: |
      #!/usr/bin/env bash
      set -eu
      docker buildx build \
      --cache-from $IMAGE_URI:latest \
      -t $IMAGE_URI:$SHORT_SHA \
      -t $IMAGE_URI:latest \
      -f Dockerfile .

  # test can be run with CUDA
  # - id: "test"
  #   name: "$_REGION-docker.pkg.dev/$PROJECT_ID/containers/$_SERVICE_NAME"
  #   waitFor: ["docker-build"]
  #   dir: "/home/appuser/Grounded-SAM-2"
  #   script: |
  #     #!/usr/bin/env bash
  #     pip install -e ".[dev]"
  #     pytest -s tests

  - id: "docker-push"
    name: "gcr.io/cloud-builders/docker"
    waitFor: ["docker-build"]
    env:
      - "IMAGE_URI=$_REGION-docker.pkg.dev/$PROJECT_ID/containers/$_SERVICE_NAME"
      - "SHORT_SHA=$SHORT_SHA"
    script: |
      #!/usr/bin/env bash
      set -eu
      docker push $IMAGE_URI:$SHORT_SHA
      docker push $IMAGE_URI:latest

  - id: "deploy-api"
    name: "gcr.io/cloud-builders/gcloud"
    waitFor: ["docker-push"]
    dir: "/home/appuser/Grounded-SAM-2"
    env:
      - "SERVICE_NAME=$_SERVICE_NAME"
      - "IMAGE_URI=$_REGION-docker.pkg.dev/$PROJECT_ID/containers/$_SERVICE_NAME"
      - "SHORT_SHA=$SHORT_SHA"
      - "PORT=$_PORT"
      - "PROJECT_ID=$PROJECT_ID"
    script: |
      #!/usr/bin/env bash
      set -eu
      gcloud beta run deploy $SERVICE_NAME \
        --image=$IMAGE_URI:$SHORT_SHA \
        --no-allow-unauthenticated \
        --port=$PORT \
        --concurrency=1 \
        --timeout=3600 \
        --cpu=8 \
        --memory=32Gi \
        --gpu=1 \
        --max-instances=7 \
        --no-cpu-throttling \
        --region=us-central1 \
        --project=$PROJECT_ID

options:
  machineType: "E2_HIGHCPU_32"
logsBucket: ${PROJECT_ID}_cloudbuild
timeout: 3600s
serviceAccount: projects/$PROJECT_ID/serviceAccounts/$_SERVICE_ACCOUNT
